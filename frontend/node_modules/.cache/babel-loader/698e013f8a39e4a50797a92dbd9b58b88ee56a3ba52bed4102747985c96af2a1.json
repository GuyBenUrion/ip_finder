{"ast":null,"code":"var _jsxFileName = \"/home/guyb/aisap/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [serverIp, setServerIp] = useState(null);\n  const [domain, setDomain] = useState(\"\");\n  const [resolvedIp, setResolvedIp] = useState([]);\n\n  // Fetch server's IPs\n  const fetchServerIp = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/ip\");\n      setServerIp(response.data);\n    } catch (error) {\n      console.error(\"Error fetching server IP:\", error);\n    }\n  };\n\n  // Resolve domain IPs\n  const resolveDomain = async () => {\n    if (!domain) return;\n    try {\n      const response = await axios.get(`http://localhost:8000/api/resolve/${domain}`);\n      setResolvedIp(response.data);\n      console.log(\"Resolved IP:\", response.data);\n    } catch (error) {\n      console.error(\"Error resolving domain:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IP Address Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchServerIp,\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: \"Get Server IP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), serverIp && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Internal IP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this), \" \", serverIp.internal_ip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"External IP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this), \" \", serverIp.external_ip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Resolve Domain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: domain,\n      onChange: e => setDomain(e.target.value),\n      placeholder: \"Enter domain (e.g., google.com)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resolveDomain,\n      children: \"Resolve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), resolvedIp.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resolved Domains:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: resolvedIp.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: entry.domain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"IPv4: \", Array.isArray(entry.ipv4) && entry.ipv4.length > 0 ? entry.ipv4.join(\", \") : \"N/A\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"IPv6: \", Array.isArray(entry.ipv6) && entry.ipv6.length > 0 ? entry.ipv6.join(\", \") : \"N/A\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 31\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 27\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"PPc262GJSpemHFyg+IvcluzDYf8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","serverIp","setServerIp","domain","setDomain","resolvedIp","setResolvedIp","fetchServerIp","response","get","data","error","console","resolveDomain","log","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginBottom","internal_ip","external_ip","type","value","onChange","e","target","placeholder","length","map","entry","index","Array","isArray","ipv4","join","ipv6","_c","$RefreshReg$"],"sources":["/home/guyb/aisap/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n    const [serverIp, setServerIp] = useState(null);\n    const [domain, setDomain] = useState(\"\");\n    const [resolvedIp, setResolvedIp] = useState([]);\n\n    // Fetch server's IPs\n    const fetchServerIp = async () => {\n        try {\n            const response = await axios.get(\"http://localhost:8000/api/ip\");\n            setServerIp(response.data);\n        } catch (error) {\n            console.error(\"Error fetching server IP:\", error);\n        }\n    };\n\n    // Resolve domain IPs\n    const resolveDomain = async () => {\n        if (!domain) return;\n        try {\n            const response = await axios.get(`http://localhost:8000/api/resolve/${domain}`);\n            setResolvedIp(response.data);\n            \n            console.log(\"Resolved IP:\", response.data);\n        } catch (error) {\n            console.error(\"Error resolving domain:\", error);\n        }\n    };\n\n    return (\n        <div style={{ padding: \"20px\", fontFamily: \"Arial, sans-serif\" }}>\n            <h1>IP Address Finder</h1>\n\n            <button onClick={fetchServerIp} style={{ marginBottom: \"10px\" }}>Get Server IP</button>\n            {serverIp && (\n                <div>\n                    <p><strong>Internal IP:</strong> {serverIp.internal_ip}</p>\n                    <p><strong>External IP:</strong> {serverIp.external_ip}</p>\n                </div>\n            )}\n\n            <h2>Resolve Domain</h2>\n            <input\n                type=\"text\"\n                value={domain}\n                onChange={(e) => setDomain(e.target.value)}\n                placeholder=\"Enter domain (e.g., google.com)\"\n            />\n            <button onClick={resolveDomain}>Resolve</button>\n\n            {resolvedIp.length > 0 && (\n              <div>\n                  <h3>Resolved Domains:</h3>\n                  <ul>\n                      {resolvedIp.map((entry, index) => (\n                          <li key={index}>\n                              <strong>{entry.domain}</strong>\n                              <ul>\n                                  <li>IPv4: {Array.isArray(entry.ipv4) && entry.ipv4.length > 0 ? entry.ipv4.join(\", \") : \"N/A\"}</li>\n                                  <li>IPv6: {Array.isArray(entry.ipv6) && entry.ipv6.length > 0 ? entry.ipv6.join(\", \") : \"N/A\"}</li>\n                              </ul>\n                          </li>\n                      ))}\n                  </ul>\n              </div>\n          )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}