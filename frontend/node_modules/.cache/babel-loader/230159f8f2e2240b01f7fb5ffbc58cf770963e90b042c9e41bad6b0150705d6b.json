{"ast":null,"code":"var _jsxFileName = \"/home/guyb/ip_finder/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [localIp, setLocalIp] = useState(null);\n  const [domain, setDomain] = useState(\"\");\n  const [resolvedIp, setResolvedIp] = useState([]);\n\n  // fetch all stored IPs when the app loads\n  useEffect(() => {\n    const fetchStoredIps = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/api/all_resolved\");\n        const storedData = response.data;\n\n        // extract domains and IPs from response\n        const formattedData = Object.keys(storedData).map(domain => ({\n          domain,\n          domainIp: storedData[domain][0].length > 0 ? storedData[domain][0].join(\", \") : \"N/A\"\n        }));\n        setResolvedIp(formattedData);\n      } catch (error) {\n        console.error(\"Error fetching stored IPs:\", error);\n      }\n    };\n    fetchStoredIps();\n  }, []);\n\n  // get domain IP address\n  const resolveDomain = async () => {\n    if (!domain) return;\n\n    // prevent duplicate domains\n    if (resolvedIp.some(entry => entry.domain === domain)) {\n      alert(`The domain \"${domain}\" has already been resolved.`);\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:8000/api/resolve/${domain}`);\n      const domainIp = response.data[0].length > 0 ? response.data[0].join(\", \") : \"N/A\";\n      setResolvedIp(prevDomainIps => [...prevDomainIps, {\n        domain,\n        domainIp\n      }]);\n    } catch (error) {\n      console.error(\"Error resolving domain:\", error);\n    }\n  };\n\n  // get local privet and public IP addresses\n  const getLocalIp = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/get_local_ip\");\n      setLocalIp(response.data);\n    } catch (error) {\n      console.error(\"Error fetching local IP:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IP Address Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getLocalIp,\n      children: \"Get Local IP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), localIp && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Local IP Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Internal IP: \", localIp[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Public IP: \", localIp[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Resolve Domain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: domain,\n      onChange: e => setDomain(e.target.value),\n      placeholder: \"Enter domain (e.g., google.com)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resolveDomain,\n      children: \"Resolve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), resolvedIp.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resolved Domains:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), resolvedIp.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: entry.domain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"IP Address: \", entry.domainIp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"cXrKFAgxg8KTcOcF6CooDHypGBE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","localIp","setLocalIp","domain","setDomain","resolvedIp","setResolvedIp","fetchStoredIps","response","get","storedData","data","formattedData","Object","keys","map","domainIp","length","join","error","console","resolveDomain","some","entry","alert","prevDomainIps","getLocalIp","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","index","_c","$RefreshReg$"],"sources":["/home/guyb/ip_finder/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\n\nfunction App() {\n    const [localIp, setLocalIp] = useState(null);\n    const [domain, setDomain] = useState(\"\");\n    const [resolvedIp, setResolvedIp] = useState([]);\n\n    // fetch all stored IPs when the app loads\n    useEffect(() => {\n        const fetchStoredIps = async () => {\n            try {\n                const response = await axios.get(\"http://localhost:8000/api/all_resolved\");\n                const storedData = response.data;\n\n                // extract domains and IPs from response\n                const formattedData = Object.keys(storedData).map(domain => ({\n                    domain,\n                    domainIp: storedData[domain][0].length > 0 ? storedData[domain][0].join(\", \") : \"N/A\",\n                }));\n\n                setResolvedIp(formattedData);\n            } catch (error) {\n                console.error(\"Error fetching stored IPs:\", error);\n            }\n        };\n\n        fetchStoredIps();\n    }, []);\n\n    // get domain IP address\n    const resolveDomain = async () => {\n        if (!domain) return;\n\n        // prevent duplicate domains\n        if (resolvedIp.some(entry => entry.domain === domain)) {\n            alert(`The domain \"${domain}\" has already been resolved.`);\n            return;\n        }\n\n        try {\n            const response = await axios.get(`http://localhost:8000/api/resolve/${domain}`);\n            const domainIp = response.data[0].length > 0 ? response.data[0].join(\", \") : \"N/A\";\n\n            setResolvedIp(prevDomainIps => [...prevDomainIps, { domain, domainIp}]);\n\n        } catch (error) {\n            console.error(\"Error resolving domain:\", error);\n        }\n    };\n    \n    // get local privet and public IP addresses\n    const getLocalIp = async () => {\n        try {\n            const response = await axios.get(\"http://localhost:8000/api/get_local_ip\");\n            setLocalIp(response.data);\n        } catch (error) {\n            console.error(\"Error fetching local IP:\", error);\n        }\n    }\n\n    return (\n        <div style={{padding: \"20px\"}}>\n            <h1>IP Address Finder</h1>\n            <button onClick={getLocalIp}>Get Local IP</button>\n            {localIp && (\n              <div>\n                <h2>Local IP Address</h2>\n                <p>Internal IP: {localIp[0]}</p>\n                <p>Public IP: {localIp[1]}</p>\n              </div>\n            )}\n            <h2>Resolve Domain</h2>\n            <input\n                type=\"text\"\n                value={domain}\n                onChange={(e) => setDomain(e.target.value)}\n                placeholder=\"Enter domain (e.g., google.com)\"\n            />\n            <button onClick={resolveDomain}>Resolve</button>\n\n            {resolvedIp.length > 0 && (\n                <div>\n                    <h3>Resolved Domains:</h3>\n                    {resolvedIp.map((entry, index) => (\n                        <div key={index}>\n                            <strong>{entry.domain}</strong>\n                            <ul>\n                                <li>IP Address: {entry.domainIp}</li>\n                            </ul>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}